#include <iostream>
#include <scenn/load/mini_ember.hpp>
#include <scenn/scenn.hpp>

SCENN_CONSTEXPR auto mini_ember_test() {
  using namespace scenn;
  auto [train_data, test_data] = load_mini_ember_data<double>();
  auto evaluation =
      SequentialNetwork(BinaryCrossEntropy(), DenseLayer<256, 128, double>(),
                        ActivationLayer<128, double>(ReLU()),
                        DenseLayer<128, 2, double>(),
                        ActivationLayer<2, double>(Sigmoid()))
          .train<50>(std::move(train_data), 20, 0.1)
          .evaluate(std::move(test_data));
  return evaluation;
}

int main() {
  SCENN_CONSTEXPR auto evaluation = mini_ember_test();
  std::cout << evaluation << std::endl;  // We see 5 (of 10)
}
